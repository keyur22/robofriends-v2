{"version":3,"sources":["reducers.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","actions.js","constants.js","index.js"],"names":["searchRobotsInitState","searchField","requestRobotsInitState","isPending","robots","error","Card","id","name","email","className","src","alt","CardList","props","map","user","key","SearchBox","type","placeholder","onChange","search","Scroll","children","App","this","requestRobots","getSearchField","filteredRobots","filter","robot","toLowerCase","includes","React","Component","connect","state","searchRobots","dispatch","e","payload","target","value","fetch","then","res","json","users","catch","err","rootReducer","combineReducers","action","Object","assign","logger","createLogger","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.29261e33.chunk.js","sourcesContent":["import {\n    CHANGE_SEARCH_FIELD,\n    REQUEST_ROBOTS_PENDING,\n    REQUEST_ROBOTS_SUCCESS,\n    REQUEST_ROBOTS_FAIL\n} from './constants';\n\nconst searchRobotsInitState = {\n    searchField: ''\n}\n\nconst requestRobotsInitState = {\n    isPending: false,\n    robots: [],\n    error: ''\n}\n\nexport const searchRobots = (state = searchRobotsInitState, action = {}) => {\n    switch (action.type) {\n        case CHANGE_SEARCH_FIELD:\n            return Object.assign({}, state, { searchField: action.payload });\n        default:\n            return state;\n    }\n};\n\nexport const requestRobots = (state = requestRobotsInitState, action = {}) => {\n    switch (action.type) {\n        case REQUEST_ROBOTS_PENDING:\n            return Object.assign({}, state, { isPending: true });\n\n        case REQUEST_ROBOTS_SUCCESS:\n            return Object.assign({}, state, { isPending: false, robots: action.payload });\n\n        case REQUEST_ROBOTS_FAIL:\n            return Object.assign({}, state, { isPending: false, error: action.payload });\n\n        default:\n            return state;\n    }\n}","import React from 'react';\n\nconst Card = ({ id, name, email }) => {\n\treturn (\n\t\t<div className=\"bg-lightest-blue pa2 ma2 shadow-5 grow br2\">\n\t\t\t<img src={`https://robohash.org/${id}?size=200x200`} alt=\"robots\"></img>\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{email}</p>\n\t\t\t</div>\n\t\t</div>\n\t)\n};\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = props => {\n    return (\n        <div className='flex flex-wrap items-center justify-center'>\n            {\n                props.robots.map(user => {\n                    return <Card key={user.id} id={user.id} email={user.email} name={user.name} />\n                })\n            }\n        </div>\n    );\n};\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = props => {\n    return (\n        <div className='mb3'>\n            <input className='pa2 bg-lightest-blue ba b--green br3' type='text' placeholder='Search robots' onChange={props.search}></input>\n        </div>\n    );\n};\n\nexport default SearchBox;","import React from 'react';\nimport './Scroll.css';\n\nconst Scroll = props => {\n    return (\n        <div className='scroll'>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Scroll;","import React from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\nimport { setSearchField, onRequestRobots } from '../actions';\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tsearchField: state.searchRobots.searchField,\n\t\trobots: state.requestRobots.robots,\n\t\tisPending: state.requestRobots.isPending\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tgetSearchField: e => dispatch(setSearchField(e.target.value)),\n\t\trequestRobots: () => dispatch(onRequestRobots())\n\t}\n}\n\nclass App extends React.Component {\n\t// constructor() {\n\t// \tsuper();\n\t// \tthis.state = {\n\t// \t\trobots: [],\n\t// \t}\n\t// }\n\n\tcomponentDidMount() {\n\t\tthis.props.requestRobots();\n\t}\n\n\trender() {\n\t\t// const { robots } = this.state;\n\t\tconst { searchField, getSearchField, robots, isPending } = this.props;\n\t\tconst filteredRobots = robots.filter(robot => robot.name.toLowerCase().includes(searchField.toLowerCase()));\n\n\t\tif (isPending) {\n\t\t\treturn (<h1 className='light-blue tc'>Loading...</h1>);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div className='tc pa2'>\n\t\t\t\t\t<h1 className='light-blue'>RoboFriends</h1>\n\t\t\t\t\t<SearchBox search={getSearchField} />\n\t\t\t\t\t<Scroll>\n\t\t\t\t\t\t<CardList robots={filteredRobots} />\n\t\t\t\t\t</Scroll>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\n    CHANGE_SEARCH_FIELD,\n    REQUEST_ROBOTS_PENDING,\n    REQUEST_ROBOTS_SUCCESS,\n    REQUEST_ROBOTS_FAIL\n} from './constants';\n\nexport const setSearchField = text => ({\n    type: CHANGE_SEARCH_FIELD,\n    payload: text\n});\n\nexport const onRequestRobots = () => dispatch => {\n    dispatch({ type: REQUEST_ROBOTS_PENDING });\n    fetch('https://jsonplaceholder.typicode.com/users')\n        .then(res => res.json())\n        .then(users => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: users }))\n        .catch(err => dispatch({ type: REQUEST_ROBOTS_FAIL, payload: err }));\n};","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\nexport const REQUEST_ROBOTS_FAIL = 'REQUEST_ROBOTS_FAIL';","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport { searchRobots, requestRobots } from './reducers';\nimport thunkMiddleware from 'redux-thunk';\n\n\nimport App from './containers/App';\nimport './index.css';\nimport 'tachyons';\n\nconst rootReducer = combineReducers({ searchRobots, requestRobots });\nconst logger = createLogger();\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\nReactDOM.render(\n    <Provider store={store}><App /></Provider>, document.getElementById('root')\n);"],"sourceRoot":""}